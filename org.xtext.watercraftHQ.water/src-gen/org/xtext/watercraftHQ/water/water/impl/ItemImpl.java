/**
 * generated by Xtext 2.12.0
 */
package org.xtext.watercraftHQ.water.water.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.watercraftHQ.water.water.Hero;
import org.xtext.watercraftHQ.water.water.Item;
import org.xtext.watercraftHQ.water.water.Position;
import org.xtext.watercraftHQ.water.water.WaterPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Item</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.ItemImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.ItemImpl#getAttackBonus <em>Attack Bonus</em>}</li>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.ItemImpl#getDefenseBonus <em>Defense Bonus</em>}</li>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.ItemImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.ItemImpl#getHero <em>Hero</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ItemImpl extends TypeImpl implements Item
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getAttackBonus() <em>Attack Bonus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttackBonus()
   * @generated
   * @ordered
   */
  protected static final int ATTACK_BONUS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAttackBonus() <em>Attack Bonus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttackBonus()
   * @generated
   * @ordered
   */
  protected int attackBonus = ATTACK_BONUS_EDEFAULT;

  /**
   * The default value of the '{@link #getDefenseBonus() <em>Defense Bonus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefenseBonus()
   * @generated
   * @ordered
   */
  protected static final int DEFENSE_BONUS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDefenseBonus() <em>Defense Bonus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefenseBonus()
   * @generated
   * @ordered
   */
  protected int defenseBonus = DEFENSE_BONUS_EDEFAULT;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected Position location;

  /**
   * The cached value of the '{@link #getHero() <em>Hero</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHero()
   * @generated
   * @ordered
   */
  protected Hero hero;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ItemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WaterPackage.Literals.ITEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WaterPackage.ITEM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getAttackBonus()
  {
    return attackBonus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttackBonus(int newAttackBonus)
  {
    int oldAttackBonus = attackBonus;
    attackBonus = newAttackBonus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WaterPackage.ITEM__ATTACK_BONUS, oldAttackBonus, attackBonus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getDefenseBonus()
  {
    return defenseBonus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefenseBonus(int newDefenseBonus)
  {
    int oldDefenseBonus = defenseBonus;
    defenseBonus = newDefenseBonus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WaterPackage.ITEM__DEFENSE_BONUS, oldDefenseBonus, defenseBonus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Position getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLocation(Position newLocation, NotificationChain msgs)
  {
    Position oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WaterPackage.ITEM__LOCATION, oldLocation, newLocation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLocation(Position newLocation)
  {
    if (newLocation != location)
    {
      NotificationChain msgs = null;
      if (location != null)
        msgs = ((InternalEObject)location).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WaterPackage.ITEM__LOCATION, null, msgs);
      if (newLocation != null)
        msgs = ((InternalEObject)newLocation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WaterPackage.ITEM__LOCATION, null, msgs);
      msgs = basicSetLocation(newLocation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WaterPackage.ITEM__LOCATION, newLocation, newLocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Hero getHero()
  {
    if (hero != null && hero.eIsProxy())
    {
      InternalEObject oldHero = (InternalEObject)hero;
      hero = (Hero)eResolveProxy(oldHero);
      if (hero != oldHero)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, WaterPackage.ITEM__HERO, oldHero, hero));
      }
    }
    return hero;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Hero basicGetHero()
  {
    return hero;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHero(Hero newHero)
  {
    Hero oldHero = hero;
    hero = newHero;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WaterPackage.ITEM__HERO, oldHero, hero));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WaterPackage.ITEM__LOCATION:
        return basicSetLocation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WaterPackage.ITEM__NAME:
        return getName();
      case WaterPackage.ITEM__ATTACK_BONUS:
        return getAttackBonus();
      case WaterPackage.ITEM__DEFENSE_BONUS:
        return getDefenseBonus();
      case WaterPackage.ITEM__LOCATION:
        return getLocation();
      case WaterPackage.ITEM__HERO:
        if (resolve) return getHero();
        return basicGetHero();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WaterPackage.ITEM__NAME:
        setName((String)newValue);
        return;
      case WaterPackage.ITEM__ATTACK_BONUS:
        setAttackBonus((Integer)newValue);
        return;
      case WaterPackage.ITEM__DEFENSE_BONUS:
        setDefenseBonus((Integer)newValue);
        return;
      case WaterPackage.ITEM__LOCATION:
        setLocation((Position)newValue);
        return;
      case WaterPackage.ITEM__HERO:
        setHero((Hero)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WaterPackage.ITEM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case WaterPackage.ITEM__ATTACK_BONUS:
        setAttackBonus(ATTACK_BONUS_EDEFAULT);
        return;
      case WaterPackage.ITEM__DEFENSE_BONUS:
        setDefenseBonus(DEFENSE_BONUS_EDEFAULT);
        return;
      case WaterPackage.ITEM__LOCATION:
        setLocation((Position)null);
        return;
      case WaterPackage.ITEM__HERO:
        setHero((Hero)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WaterPackage.ITEM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case WaterPackage.ITEM__ATTACK_BONUS:
        return attackBonus != ATTACK_BONUS_EDEFAULT;
      case WaterPackage.ITEM__DEFENSE_BONUS:
        return defenseBonus != DEFENSE_BONUS_EDEFAULT;
      case WaterPackage.ITEM__LOCATION:
        return location != null;
      case WaterPackage.ITEM__HERO:
        return hero != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", attackBonus: ");
    result.append(attackBonus);
    result.append(", defenseBonus: ");
    result.append(defenseBonus);
    result.append(')');
    return result.toString();
  }

} //ItemImpl
