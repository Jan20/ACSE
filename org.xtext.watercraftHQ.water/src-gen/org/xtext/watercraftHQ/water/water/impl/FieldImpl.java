/**
 * generated by Xtext 2.12.0
 */
package org.xtext.watercraftHQ.water.water.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.watercraftHQ.water.water.Field;
import org.xtext.watercraftHQ.water.water.Hero;
import org.xtext.watercraftHQ.water.water.Item;
import org.xtext.watercraftHQ.water.water.Rectangle;
import org.xtext.watercraftHQ.water.water.WaterPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.FieldImpl#getRectangle <em>Rectangle</em>}</li>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.FieldImpl#getHeros <em>Heros</em>}</li>
 *   <li>{@link org.xtext.watercraftHQ.water.water.impl.FieldImpl#getItems <em>Items</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FieldImpl extends MinimalEObjectImpl.Container implements Field
{
  /**
   * The cached value of the '{@link #getRectangle() <em>Rectangle</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRectangle()
   * @generated
   * @ordered
   */
  protected Rectangle rectangle;

  /**
   * The cached value of the '{@link #getHeros() <em>Heros</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeros()
   * @generated
   * @ordered
   */
  protected EList<Hero> heros;

  /**
   * The cached value of the '{@link #getItems() <em>Items</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItems()
   * @generated
   * @ordered
   */
  protected EList<Item> items;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WaterPackage.Literals.FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rectangle getRectangle()
  {
    return rectangle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRectangle(Rectangle newRectangle, NotificationChain msgs)
  {
    Rectangle oldRectangle = rectangle;
    rectangle = newRectangle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WaterPackage.FIELD__RECTANGLE, oldRectangle, newRectangle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRectangle(Rectangle newRectangle)
  {
    if (newRectangle != rectangle)
    {
      NotificationChain msgs = null;
      if (rectangle != null)
        msgs = ((InternalEObject)rectangle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WaterPackage.FIELD__RECTANGLE, null, msgs);
      if (newRectangle != null)
        msgs = ((InternalEObject)newRectangle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WaterPackage.FIELD__RECTANGLE, null, msgs);
      msgs = basicSetRectangle(newRectangle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WaterPackage.FIELD__RECTANGLE, newRectangle, newRectangle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Hero> getHeros()
  {
    if (heros == null)
    {
      heros = new EObjectContainmentEList<Hero>(Hero.class, this, WaterPackage.FIELD__HEROS);
    }
    return heros;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Item> getItems()
  {
    if (items == null)
    {
      items = new EObjectContainmentEList<Item>(Item.class, this, WaterPackage.FIELD__ITEMS);
    }
    return items;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WaterPackage.FIELD__RECTANGLE:
        return basicSetRectangle(null, msgs);
      case WaterPackage.FIELD__HEROS:
        return ((InternalEList<?>)getHeros()).basicRemove(otherEnd, msgs);
      case WaterPackage.FIELD__ITEMS:
        return ((InternalEList<?>)getItems()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WaterPackage.FIELD__RECTANGLE:
        return getRectangle();
      case WaterPackage.FIELD__HEROS:
        return getHeros();
      case WaterPackage.FIELD__ITEMS:
        return getItems();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WaterPackage.FIELD__RECTANGLE:
        setRectangle((Rectangle)newValue);
        return;
      case WaterPackage.FIELD__HEROS:
        getHeros().clear();
        getHeros().addAll((Collection<? extends Hero>)newValue);
        return;
      case WaterPackage.FIELD__ITEMS:
        getItems().clear();
        getItems().addAll((Collection<? extends Item>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WaterPackage.FIELD__RECTANGLE:
        setRectangle((Rectangle)null);
        return;
      case WaterPackage.FIELD__HEROS:
        getHeros().clear();
        return;
      case WaterPackage.FIELD__ITEMS:
        getItems().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WaterPackage.FIELD__RECTANGLE:
        return rectangle != null;
      case WaterPackage.FIELD__HEROS:
        return heros != null && !heros.isEmpty();
      case WaterPackage.FIELD__ITEMS:
        return items != null && !items.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FieldImpl
