/*
 * generated by Xtext 2.12.0
 */
grammar InternalWater;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.watercraftHQ.water.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.watercraftHQ.water.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.watercraftHQ.water.services.WaterGrammarAccess;

}

@parser::members {

 	private WaterGrammarAccess grammarAccess;

    public InternalWaterParser(TokenStream input, WaterGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ComputerGame";
   	}

   	@Override
   	protected WaterGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleComputerGame
entryRuleComputerGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComputerGameRule()); }
	iv_ruleComputerGame=ruleComputerGame
	{ $current=$iv_ruleComputerGame.current; }
	EOF;

// Rule ComputerGame
ruleComputerGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getComputerGameAccess().getElementsTypeParserRuleCall_0());
			}
			lv_elements_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getComputerGameRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.watercraftHQ.water.Water.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getLevelParserRuleCall_0());
		}
		this_Level_0=ruleLevel
		{
			$current = $this_Level_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getHeroParserRuleCall_1());
		}
		this_Hero_1=ruleHero
		{
			$current = $this_Hero_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getItemParserRuleCall_2());
		}
		this_Item_2=ruleItem
		{
			$current = $this_Item_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLevel
entryRuleLevel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLevelRule()); }
	iv_ruleLevel=ruleLevel
	{ $current=$iv_ruleLevel.current; }
	EOF;

// Rule Level
ruleLevel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='level'
		{
			newLeafNode(otherlv_0, grammarAccess.getLevelAccess().getLevelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLevelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLevelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLevelAccess().getFieldFieldParserRuleCall_2_0());
				}
				lv_field_2_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLevelRule());
					}
					set(
						$current,
						"field",
						lv_field_2_0,
						"org.xtext.watercraftHQ.water.Water.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='field'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFieldKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getRectangleRectangleParserRuleCall_1_0());
				}
				lv_rectangle_1_0=ruleRectangle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"rectangle",
						lv_rectangle_1_0,
						"org.xtext.watercraftHQ.water.Water.Rectangle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getHerosHeroParserRuleCall_2_0());
				}
				lv_heros_2_0=ruleHero
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					add(
						$current,
						"heros",
						lv_heros_2_0,
						"org.xtext.watercraftHQ.water.Water.Hero");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getItemsItemParserRuleCall_3_0());
				}
				lv_items_3_0=ruleItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					add(
						$current,
						"items",
						lv_items_3_0,
						"org.xtext.watercraftHQ.water.Water.Item");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRectangle
entryRuleRectangle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRectangleRule()); }
	iv_ruleRectangle=ruleRectangle
	{ $current=$iv_ruleRectangle.current; }
	EOF;

// Rule Rectangle
ruleRectangle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rectangle'
		{
			newLeafNode(otherlv_0, grammarAccess.getRectangleAccess().getRectangleKeyword_0());
		}
		otherlv_1='X'
		{
			newLeafNode(otherlv_1, grammarAccess.getRectangleAccess().getXKeyword_1());
		}
		(
			(
				lv_X_2_0=RULE_INT
				{
					newLeafNode(lv_X_2_0, grammarAccess.getRectangleAccess().getXINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRectangleRule());
					}
					setWithLastConsumed(
						$current,
						"X",
						lv_X_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='Y'
		{
			newLeafNode(otherlv_3, grammarAccess.getRectangleAccess().getYKeyword_3());
		}
		(
			(
				lv_Y_4_0=RULE_INT
				{
					newLeafNode(lv_Y_4_0, grammarAccess.getRectangleAccess().getYINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRectangleRule());
					}
					setWithLastConsumed(
						$current,
						"Y",
						lv_Y_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleHero
entryRuleHero returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeroRule()); }
	iv_ruleHero=ruleHero
	{ $current=$iv_ruleHero.current; }
	EOF;

// Rule Hero
ruleHero returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='hero'
		{
			newLeafNode(otherlv_0, grammarAccess.getHeroAccess().getHeroKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeroAccess().getPositionPositionParserRuleCall_1_0());
				}
				lv_position_1_0=rulePosition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeroRule());
					}
					set(
						$current,
						"position",
						lv_position_1_0,
						"org.xtext.watercraftHQ.water.Water.Position");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_isBoss_2_0='isBoss'
				{
					newLeafNode(lv_isBoss_2_0, grammarAccess.getHeroAccess().getIsBossIsBossKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHeroRule());
					}
					setWithLastConsumed($current, "isBoss", true, "isBoss");
				}
			)
		)?
	)
;

// Entry rule entryRulePosition
entryRulePosition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPositionRule()); }
	iv_rulePosition=rulePosition
	{ $current=$iv_rulePosition.current; }
	EOF;

// Rule Position
rulePosition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='X'
		{
			newLeafNode(otherlv_0, grammarAccess.getPositionAccess().getXKeyword_0());
		}
		(
			(
				lv_X_1_0=RULE_INT
				{
					newLeafNode(lv_X_1_0, grammarAccess.getPositionAccess().getXINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPositionRule());
					}
					setWithLastConsumed(
						$current,
						"X",
						lv_X_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='Y'
		{
			newLeafNode(otherlv_2, grammarAccess.getPositionAccess().getYKeyword_2());
		}
		(
			(
				lv_Y_3_0=RULE_INT
				{
					newLeafNode(lv_Y_3_0, grammarAccess.getPositionAccess().getYINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPositionRule());
					}
					setWithLastConsumed(
						$current,
						"Y",
						lv_Y_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemRule()); }
	iv_ruleItem=ruleItem
	{ $current=$iv_ruleItem.current; }
	EOF;

// Rule Item
ruleItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='item'
		{
			newLeafNode(otherlv_0, grammarAccess.getItemAccess().getItemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='attackBonus'
		{
			newLeafNode(otherlv_2, grammarAccess.getItemAccess().getAttackBonusKeyword_2());
		}
		(
			(
				lv_attackBonus_3_0=RULE_INT
				{
					newLeafNode(lv_attackBonus_3_0, grammarAccess.getItemAccess().getAttackBonusINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemRule());
					}
					setWithLastConsumed(
						$current,
						"attackBonus",
						lv_attackBonus_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='defenseBonus'
		{
			newLeafNode(otherlv_4, grammarAccess.getItemAccess().getDefenseBonusKeyword_4());
		}
		(
			(
				lv_defenseBonus_5_0=RULE_INT
				{
					newLeafNode(lv_defenseBonus_5_0, grammarAccess.getItemAccess().getDefenseBonusINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemRule());
					}
					setWithLastConsumed(
						$current,
						"defenseBonus",
						lv_defenseBonus_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getItemAccess().getLocationPositionParserRuleCall_6_0_0());
					}
					lv_location_6_0=rulePosition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemRule());
						}
						set(
							$current,
							"location",
							lv_location_6_0,
							"org.xtext.watercraftHQ.water.Water.Position");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getItemRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getItemAccess().getHeroHeroCrossReference_6_1_0());
					}
				)
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
