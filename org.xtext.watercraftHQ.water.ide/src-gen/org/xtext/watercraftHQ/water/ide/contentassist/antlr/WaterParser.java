/*
 * generated by Xtext 2.12.0
 */
package org.xtext.watercraftHQ.water.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.watercraftHQ.water.ide.contentassist.antlr.internal.InternalWaterParser;
import org.xtext.watercraftHQ.water.services.WaterGrammarAccess;

public class WaterParser extends AbstractContentAssistParser {

	@Inject
	private WaterGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalWaterParser createParser() {
		InternalWaterParser result = new InternalWaterParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getItemAccess().getAlternatives_6(), "rule__Item__Alternatives_6");
					put(grammarAccess.getLevelAccess().getGroup(), "rule__Level__Group__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getRectangleAccess().getGroup(), "rule__Rectangle__Group__0");
					put(grammarAccess.getHeroAccess().getGroup(), "rule__Hero__Group__0");
					put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
					put(grammarAccess.getItemAccess().getGroup(), "rule__Item__Group__0");
					put(grammarAccess.getComputerGameAccess().getElementsAssignment(), "rule__ComputerGame__ElementsAssignment");
					put(grammarAccess.getLevelAccess().getNameAssignment_1(), "rule__Level__NameAssignment_1");
					put(grammarAccess.getLevelAccess().getFieldAssignment_2(), "rule__Level__FieldAssignment_2");
					put(grammarAccess.getFieldAccess().getRectangleAssignment_1(), "rule__Field__RectangleAssignment_1");
					put(grammarAccess.getFieldAccess().getHerosAssignment_2(), "rule__Field__HerosAssignment_2");
					put(grammarAccess.getFieldAccess().getItemsAssignment_3(), "rule__Field__ItemsAssignment_3");
					put(grammarAccess.getRectangleAccess().getXAssignment_2(), "rule__Rectangle__XAssignment_2");
					put(grammarAccess.getRectangleAccess().getYAssignment_4(), "rule__Rectangle__YAssignment_4");
					put(grammarAccess.getHeroAccess().getPositionAssignment_1(), "rule__Hero__PositionAssignment_1");
					put(grammarAccess.getHeroAccess().getIsBossAssignment_2(), "rule__Hero__IsBossAssignment_2");
					put(grammarAccess.getPositionAccess().getXAssignment_1(), "rule__Position__XAssignment_1");
					put(grammarAccess.getPositionAccess().getYAssignment_3(), "rule__Position__YAssignment_3");
					put(grammarAccess.getItemAccess().getNameAssignment_1(), "rule__Item__NameAssignment_1");
					put(grammarAccess.getItemAccess().getAttackBonusAssignment_3(), "rule__Item__AttackBonusAssignment_3");
					put(grammarAccess.getItemAccess().getDefenseBonusAssignment_5(), "rule__Item__DefenseBonusAssignment_5");
					put(grammarAccess.getItemAccess().getLocationAssignment_6_0(), "rule__Item__LocationAssignment_6_0");
					put(grammarAccess.getItemAccess().getHeroAssignment_6_1(), "rule__Item__HeroAssignment_6_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public WaterGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(WaterGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
