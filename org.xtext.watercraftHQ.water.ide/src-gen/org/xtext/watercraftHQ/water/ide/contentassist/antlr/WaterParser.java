/*
 * generated by Xtext 2.12.0
 */
package org.xtext.watercraftHQ.water.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.watercraftHQ.water.ide.contentassist.antlr.internal.InternalWaterParser;
import org.xtext.watercraftHQ.water.services.WaterGrammarAccess;

public class WaterParser extends AbstractContentAssistParser {

	@Inject
	private WaterGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalWaterParser createParser() {
		InternalWaterParser result = new InternalWaterParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
					put(grammarAccess.getWaterClassAccess().getGroup(), "rule__WaterClass__Group__0");
					put(grammarAccess.getWaterVariableAccess().getGroup(), "rule__WaterVariable__Group__0");
					put(grammarAccess.getDomainmodelAccess().getElementsAssignment(), "rule__Domainmodel__ElementsAssignment");
					put(grammarAccess.getWaterClassAccess().getNameAssignment_1(), "rule__WaterClass__NameAssignment_1");
					put(grammarAccess.getWaterClassAccess().getVariablesAssignment_3(), "rule__WaterClass__VariablesAssignment_3");
					put(grammarAccess.getWaterVariablesAccess().getWaterVariablesAssignment(), "rule__WaterVariables__WaterVariablesAssignment");
					put(grammarAccess.getWaterVariableAccess().getNameAssignment_1(), "rule__WaterVariable__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public WaterGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(WaterGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
